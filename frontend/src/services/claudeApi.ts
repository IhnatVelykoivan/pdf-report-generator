import {
    detectLanguage,
    getReportTitle,
    type SupportedLanguage
} from '../config/languages';

export interface ChatMessage {
    role: 'user' | 'assistant';
    content: string;
}

export interface DSLGenerationResult {
    dsl: any;
    explanation: string;
    suggestions: string[];
}

export class ClaudeApiService {
    private readonly baseUrl: string;

    constructor() {
        this.baseUrl = import.meta.env.VITE_PDF_API_URL || 'http://localhost:3001';
        console.log('üîó Claude API —á–µ—Ä–µ–∑ –±—ç–∫-—ç–Ω–¥:', this.baseUrl);
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ –Ω–∞—à –±—ç–∫-—ç–Ω–¥
    async sendMessage(messages: ChatMessage[], systemPrompt?: string): Promise<string> {
        try {
            console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –±—ç–∫-—ç–Ω–¥...');

            const response = await fetch(`${this.baseUrl}/api/claude/chat`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    messages,
                    systemPrompt
                }),
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => null);
                throw new Error(`Backend Error: ${response.status} - ${errorData?.error || response.statusText}`);
            }

            const data = await response.json();
            console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ –±—ç–∫-—ç–Ω–¥');

            return data.response;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ Claude API (—á–µ—Ä–µ–∑ –±—ç–∫-—ç–Ω–¥):', error);
            throw error;
        }
    }

    // –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —É–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    async analyzeUserRequest(userMessage: string, conversationHistory: ChatMessage[] = []): Promise<string> {
        const messages: ChatMessage[] = [
            ...conversationHistory,
            { role: 'user', content: userMessage }
        ];

        return await this.sendMessage(messages);
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è DSL —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    async generateDSLFromConversation(conversationHistory: ChatMessage[]): Promise<DSLGenerationResult> {
        try {
            console.log('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º DSL —á–µ—Ä–µ–∑ –±—ç–∫-–µ–Ω–¥...');

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π —è–∑—ã–∫ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const lastUserMessage = conversationHistory
                .filter(msg => msg.role === 'user')
                .pop()?.content || '';

            const expectedLang = detectLanguage(lastUserMessage);
            console.log(`üåê –û–∂–∏–¥–∞–µ–º—ã–π —è–∑—ã–∫ –¥–ª—è DSL: ${expectedLang}`);

            const response = await fetch(`${this.baseUrl}/api/claude/generate-dsl`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    conversationHistory,
                    expectedLanguage: expectedLang
                }),
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => null);
                throw new Error(`Backend Error: ${response.status} - ${errorData?.error || response.statusText}`);
            }

            const result = await response.json();

            // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —è–∑—ã–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if (!this.validateDSLLanguage(result.dsl, expectedLang)) {
                console.warn('‚ö†Ô∏è DSL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–µ –Ω–∞ —Ç–æ–º —è–∑—ã–∫–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
                return this.createFallbackDSL(conversationHistory);
            }

            console.log('‚úÖ DSL —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –±—ç–∫-–µ–Ω–¥ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —è–∑—ã–∫–µ:', result);

            return result;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ DSL:', error);
            return this.createFallbackDSL(conversationHistory);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —è–∑—ã–∫–∞ DSL
    private validateDSLLanguage(dsl: any, expectedLang: SupportedLanguage): boolean {
        if (!dsl.pages || !Array.isArray(dsl.pages)) {
            return false;
        }

        // –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∏–∑ DSL
        let allText = '';

        for (const page of dsl.pages) {
            if (page.elements) {
                for (const element of page.elements) {
                    if (element.type === 'text' && element.content) {
                        allText += element.content + ' ';
                    }
                    if (element.type === 'chart' && element.content) {
                        if (element.content.title) {
                            allText += element.content.title + ' ';
                        }
                        if (element.content.data?.labels) {
                            allText += element.content.data.labels.join(' ') + ' ';
                        }
                    }
                }
            }
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const detectedLang = detectLanguage(allText);

        console.log(`üîç –í–∞–ª–∏–¥–∞—Ü–∏—è —è–∑—ã–∫–∞ DSL: –æ–∂–∏–¥–∞–µ—Ç—Å—è ${expectedLang}, –æ–±–Ω–∞—Ä—É–∂–µ–Ω ${detectedLang}`);

        return detectedLang === expectedLang;
    }

    // –ó–∞–ø—Ä–æ—Å —Ñ–∏–¥–±–µ–∫–∞ –∏ —É–ª—É—á—à–µ–Ω–∏–π
    async requestFeedback(currentDSL: any, userFeedback: string): Promise<DSLGenerationResult> {
        try {
            console.log('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∏–¥–±–µ–∫ —á–µ—Ä–µ–∑ –±—ç–∫-—ç–Ω–¥...');

            const response = await fetch(`${this.baseUrl}/api/claude/feedback`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    currentDSL,
                    userFeedback
                }),
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => null);
                throw new Error(`Backend Error: ${response.status} - ${errorData?.error || response.statusText}`);
            }

            const result = await response.json();
            console.log('‚úÖ –§–∏–¥–±–µ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —á–µ—Ä–µ–∑ –±—ç–∫-–µ–Ω–¥:', result);

            return result;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∏–¥–±–µ–∫–∞:', error);

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
            return {
                dsl: currentDSL,
                explanation: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∏–¥–±–µ–∫, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å—Ç–∞–ª–∞—Å—å –ø—Ä–µ–∂–Ω–µ–π',
                suggestions: ['–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å']
            };
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π DSL —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–µ—Å–ª–∏ –±—ç–∫-—ç–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
    private createFallbackDSL(conversationHistory: ChatMessage[]): DSLGenerationResult {
        const lastUserMessage = conversationHistory
            .filter(msg => msg.role === 'user')
            .pop()?.content || '–ë–∞–∑–æ–≤—ã–π –æ—Ç—á—ë—Ç';

        const language = detectLanguage(lastUserMessage);
        const reportType = this.detectReportType(lastUserMessage);
        const isRTL = language === 'ar';

        console.log(`üîß –°–æ–∑–¥–∞—ë–º fallback DSL: —è–∑—ã–∫=${language}, —Ç–∏–ø=${reportType}`);

        return {
            dsl: {
                template: 'default',
                defaultDirection: isRTL ? 'rtl' : 'ltr',
                defaultFont: 'DejaVuSans',
                pages: [{
                    elements: [
                        {
                            type: 'text',
                            content: getReportTitle(reportType, language),
                            position: { x: 50, y: 100 },
                            style: {
                                font: 'DejaVuSans',
                                fontSize: 24,
                                color: '#2C3E50',
                                width: 495,
                                align: 'center',
                                direction: isRTL ? 'rtl' : 'ltr'
                            }
                        },
                        {
                            type: 'text',
                            content: this.generateContent(reportType, language),
                            position: { x: 50, y: 170 },
                            style: {
                                font: 'DejaVuSans',
                                fontSize: 12,
                                color: '#34495E',
                                width: 495,
                                lineBreak: true,
                                direction: isRTL ? 'rtl' : 'ltr',
                                align: isRTL ? 'right' : 'left'
                            }
                        },
                        {
                            type: 'text',
                            content: this.generateMainContent(reportType, language),
                            position: { x: 50, y: 220 },
                            style: {
                                font: 'DejaVuSans',
                                fontSize: 11,
                                color: '#2C3E50',
                                width: 495,
                                lineBreak: true,
                                direction: isRTL ? 'rtl' : 'ltr',
                                align: isRTL ? 'right' : 'left'
                            }
                        }
                    ]
                }]
            },
            explanation: language === 'ar' ?
                `ÿ™ŸÖ ÿ•ŸÜÿ¥ÿßÿ° ÿ™ŸÇÿ±Ÿäÿ± ${reportType} ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©` :
                language === 'en' ?
                    `Created ${reportType} report in English` :
                    `–°–æ–∑–¥–∞–Ω ${reportType} –æ—Ç—á—ë—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ`,
            suggestions: language === 'ar' ? [
                'ÿ•ÿ∂ÿßŸÅÿ© ÿßŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸäÿ©',
                'ÿ™ÿ∂ŸÖŸäŸÜ ÿ£ŸÇÿ≥ÿßŸÖ ÿ•ÿ∂ÿßŸÅŸäÿ©',
                'ÿ™ÿ∫ŸäŸäÿ± ŸÜŸÖÿ∑ ÿßŸÑÿ™ÿµŸÖŸäŸÖ'
            ] : language === 'en' ? [
                'Add more charts and diagrams',
                'Include additional sections',
                'Change design style'
            ] : [
                '–î–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º—ã',
                '–í–∫–ª—é—á–∏—Ç—å –±–æ–ª—å—à–µ —Ä–∞–∑–¥–µ–ª–æ–≤',
                '–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è'
            ]
        };
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    private generateMainContent(reportType: string, language: SupportedLanguage): string {
        const contentMap = {
            ar: {
                marketing: `ÿ™ŸÇÿ±Ÿäÿ± ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ™ÿ≥ŸàŸäŸÇ

1. ŸÜÿ∏ÿ±ÿ© ÿπÿßŸÖÿ© ÿπŸÑŸâ ÿßŸÑÿ£ŸÜÿ¥ÿ∑ÿ© ÿßŸÑÿ™ÿ≥ŸàŸäŸÇŸäÿ©
   ‚Ä¢ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ≠ŸÖŸÑÿßÿ™ ÿßŸÑÿ™ÿ≥ŸàŸäŸÇŸäÿ© ÿßŸÑÿ≠ÿßŸÑŸäÿ©
   ‚Ä¢ ÿ™ŸÇŸäŸäŸÖ ŸÅÿπÿßŸÑŸäÿ© ŸÇŸÜŸàÿßÿ™ ÿßŸÑÿ•ÿπŸÑÿßŸÜ
   ‚Ä¢ ÿ®ÿ≠ÿ´ ÿßŸÑÿ¨ŸÖŸáŸàÿ± ÿßŸÑŸÖÿ≥ÿ™ŸáÿØŸÅ

2. ŸÖÿ§ÿ¥ÿ±ÿßÿ™ ÿßŸÑÿ£ÿØÿßÿ° ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©
   ‚Ä¢ ÿπÿßÿ¶ÿØ ÿßŸÑÿßÿ≥ÿ™ÿ´ŸÖÿßÿ± ŸÑŸÑÿ£ŸÜÿ¥ÿ∑ÿ© ÿßŸÑÿ™ÿ≥ŸàŸäŸÇŸäÿ©
   ‚Ä¢ ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ ÿπÿ®ÿ± ŸÇŸÜŸàÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿ≠Ÿàÿßÿ∞
   ‚Ä¢ ÿ™ŸÉŸÑŸÅÿ© ÿßŸÉÿ™ÿ≥ÿßÿ® ÿßŸÑÿπŸÖŸÑÿßÿ°

3. ÿßŸÑÿ™ŸàÿµŸäÿßÿ™
   ‚Ä¢ ÿ™ÿ≠ÿ≥ŸäŸÜ ŸÖŸäÿ≤ÿßŸÜŸäÿ© ÿßŸÑÿ™ÿ≥ŸàŸäŸÇ
   ‚Ä¢ ÿßŸÑÿ™ÿ±ŸÉŸäÿ≤ ÿπŸÑŸâ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿ£ŸÉÿ´ÿ± ŸÅÿπÿßŸÑŸäÿ©
   ‚Ä¢ ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ¨ŸàÿØÿ© ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ`,

                sales: `ÿ™ŸÇÿ±Ÿäÿ± ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™

1. ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™
   ‚Ä¢ ÿ•ÿ¨ŸÖÿßŸÑŸä ÿ≠ÿ¨ŸÖ ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™ ŸÑŸÑŸÅÿ™ÿ±ÿ©
   ‚Ä¢ ŸÖŸÇÿßÿ±ŸÜÿ© ŸÖÿπ ÿßŸÑŸÅÿ™ÿ±ÿßÿ™ ÿßŸÑÿ≥ÿßÿ®ŸÇÿ©
   ‚Ä¢ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÖŸàÿ≥ŸÖŸäÿ©

2. ŸÅÿπÿßŸÑŸäÿ© ÿßŸÑŸÅÿ±ŸäŸÇ
   ‚Ä¢ ÿ£ÿØÿßÿ° ÿßŸÑŸÖÿØŸäÿ±ŸäŸÜ
   ‚Ä¢ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑÿπŸÖŸÑÿßÿ° ÿßŸÑŸÖÿ≠ÿ™ŸÖŸÑŸäŸÜ ÿ•ŸÑŸâ ŸÖÿ®Ÿäÿπÿßÿ™
   ‚Ä¢ ŸÖÿ™Ÿàÿ≥ÿ∑ ŸÇŸäŸÖÿ© ÿßŸÑŸÖÿπÿßŸÖŸÑÿ©

3. ÿßŸÑÿÆÿ∑ÿ∑ ŸàÿßŸÑÿ™ŸàŸÇÿπÿßÿ™
   ‚Ä¢ ÿ£ŸáÿØÿßŸÅ ÿßŸÑŸÅÿ™ÿ±ÿ© ÿßŸÑŸÇÿßÿØŸÖÿ©
   ‚Ä¢ ÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿäÿßÿ™ ÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™
   ‚Ä¢ ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©`,

                financial: `ÿßŸÑÿ™ŸÇÿ±Ÿäÿ± ÿßŸÑŸÖÿßŸÑŸä

1. ÿßŸÑŸÖÿ§ÿ¥ÿ±ÿßÿ™ ÿßŸÑŸÖÿßŸÑŸäÿ©
   ‚Ä¢ ÿßŸÑÿ•Ÿäÿ±ÿßÿØÿßÿ™ ŸàÿßŸÑÿ£ÿ±ÿ®ÿßÿ≠
   ‚Ä¢ ÿßŸÑŸÜŸÅŸÇÿßÿ™ ÿ≠ÿ≥ÿ® ÿßŸÑŸÅÿ¶ÿßÿ™
   ‚Ä¢ ÿßŸÑÿ™ÿØŸÅŸÇÿßÿ™ ÿßŸÑŸÜŸÇÿØŸäÿ©

2. ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ±ÿ®ÿ≠Ÿäÿ©
   ‚Ä¢ ŸáŸàÿßŸÖÿ¥ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™
   ‚Ä¢ ÿßŸÑŸÉŸÅÿßÿ°ÿ© ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑŸäÿ©
   ‚Ä¢ ŸÜŸÇÿ∑ÿ© ÿßŸÑÿ™ÿπÿßÿØŸÑ

3. ÿßŸÑÿ™ÿÆÿ∑Ÿäÿ∑ ÿßŸÑŸÖÿßŸÑŸä
   ‚Ä¢ ÿßŸÑŸÖŸäÿ≤ÿßŸÜŸäÿ© ŸÑŸÑŸÅÿ™ÿ±ÿ© ÿßŸÑŸÇÿßÿØŸÖÿ©
   ‚Ä¢ ÿÆÿ∑ÿ∑ ÿßŸÑÿßÿ≥ÿ™ÿ´ŸÖÿßÿ±
   ‚Ä¢ ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿÆÿßÿ∑ÿ±`,

                analytics: `ÿ™ŸÇÿ±Ÿäÿ± ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑÿßÿ™

1. ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸàÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ
   ‚Ä¢ ŸÖÿµÿßÿØÿ± ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™
   ‚Ä¢ ŸÖŸÜŸáÿ¨Ÿäÿ© ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ
   ‚Ä¢ ÿßŸÑŸÖŸÇÿßŸäŸäÿ≥ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©

2. ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ÿßŸÑŸÖÿ≠ÿØÿØÿ©
   ‚Ä¢ ÿßŸÑÿ£ŸÜŸÖÿßÿ∑ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©
   ‚Ä¢ ÿßŸÑÿßÿ±ÿ™ÿ®ÿßÿ∑ÿßÿ™ ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿäÿ©
   ‚Ä¢ ÿßŸÑŸÜŸÖÿßÿ∞ÿ¨ ÿßŸÑÿ™ŸÜÿ®ÿ§Ÿäÿ©

3. ÿßŸÑÿßÿ≥ÿ™ŸÜÿ™ÿßÿ¨ÿßÿ™ ŸàÿßŸÑÿ™ŸàÿµŸäÿßÿ™
   ‚Ä¢ ÿßŸÑÿ™ŸàÿµŸäÿßÿ™ ÿßŸÑÿπŸÖŸÑŸäÿ©
   ‚Ä¢ ÿÆÿ∑ÿ© ÿßŸÑÿπŸÖŸÑ
   ‚Ä¢ ÿßŸÑŸÜÿ™ÿßÿ¶ÿ¨ ÿßŸÑŸÖÿ™ŸàŸÇÿπÿ©`,

                general: `ÿßŸÑÿ™ŸÇÿ±Ÿäÿ± ÿßŸÑÿπÿßŸÖ

1. ÿßŸÑŸÖŸÇÿØŸÖÿ©
   ‚Ä¢ ÿ∫ÿ±ÿ∂ ÿßŸÑÿ™ŸÇÿ±Ÿäÿ±
   ‚Ä¢ ÿßŸÑŸÖŸÜŸáÿ¨Ÿäÿ©
   ‚Ä¢ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©

2. ÿßŸÑÿ¨ÿ≤ÿ° ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿä
   ‚Ä¢ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸàÿ∂ÿπ ÿßŸÑÿ≠ÿßŸÑŸä
   ‚Ä¢ ÿßŸÑŸÖÿ¥ÿßŸÉŸÑ ÿßŸÑŸÖÿ≠ÿØÿØÿ©
   ‚Ä¢ ŸÅÿ±ÿµ ÿßŸÑÿ™ÿ≠ÿ≥ŸäŸÜ

3. ÿßŸÑÿÆŸÑÿßÿµÿ©
   ‚Ä¢ ÿßŸÑŸÜÿ™ÿßÿ¶ÿ¨ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©
   ‚Ä¢ ÿßŸÑÿ™ŸàÿµŸäÿßÿ™
   ‚Ä¢ ÿßŸÑÿÆÿ∑Ÿàÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ©`
            },
            en: {
                marketing: `MARKETING ANALYTICS REPORT

1. MARKETING ACTIVITIES OVERVIEW
   ‚Ä¢ Current marketing campaigns analysis
   ‚Ä¢ Advertising channels effectiveness evaluation
   ‚Ä¢ Target audience research

2. KEY PERFORMANCE INDICATORS
   ‚Ä¢ Marketing activities ROI
   ‚Ä¢ Conversion by acquisition channels
   ‚Ä¢ Customer acquisition cost

3. RECOMMENDATIONS
   ‚Ä¢ Marketing budget optimization
   ‚Ä¢ Focus on most effective channels
   ‚Ä¢ Content quality improvement`,

                sales: `SALES REPORT

1. SALES ANALYSIS
   ‚Ä¢ Total sales volume for the period
   ‚Ä¢ Comparison with previous periods
   ‚Ä¢ Seasonality analysis

2. TEAM EFFECTIVENESS
   ‚Ä¢ Managers performance
   ‚Ä¢ Lead to sales conversion
   ‚Ä¢ Average transaction value

3. PLANS AND FORECASTS
   ‚Ä¢ Goals for the next period
   ‚Ä¢ Sales growth strategies
   ‚Ä¢ Required resources`,

                financial: `FINANCIAL REPORT

1. FINANCIAL INDICATORS
   ‚Ä¢ Revenue and profit
   ‚Ä¢ Expenses by categories
   ‚Ä¢ Cash flows

2. PROFITABILITY ANALYSIS
   ‚Ä¢ Product margins
   ‚Ä¢ Operational efficiency
   ‚Ä¢ Break-even point

3. FINANCIAL PLANNING
   ‚Ä¢ Budget for the next period
   ‚Ä¢ Investment plans
   ‚Ä¢ Risk management`,

                analytics: `ANALYTICS REPORT

1. DATA COLLECTION AND ANALYSIS
   ‚Ä¢ Data sources
   ‚Ä¢ Analysis methodology
   ‚Ä¢ Key metrics

2. IDENTIFIED TRENDS
   ‚Ä¢ Main patterns
   ‚Ä¢ Statistical correlations
   ‚Ä¢ Predictive models

3. CONCLUSIONS AND RECOMMENDATIONS
   ‚Ä¢ Practical recommendations
   ‚Ä¢ Action plan
   ‚Ä¢ Expected results`,

                general: `GENERAL REPORT

1. INTRODUCTION
   ‚Ä¢ Report purpose
   ‚Ä¢ Methodology
   ‚Ä¢ Key questions

2. MAIN PART
   ‚Ä¢ Current situation analysis
   ‚Ä¢ Identified problems
   ‚Ä¢ Improvement opportunities

3. CONCLUSION
   ‚Ä¢ Main findings
   ‚Ä¢ Recommendations
   ‚Ä¢ Next steps`
            },
            ru: {
                marketing: `–ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –û–¢–ß–Å–¢ –ü–û –ú–ê–†–ö–ï–¢–ò–ù–ì–£

1. –û–ë–ó–û–† –ú–ê–†–ö–ï–¢–ò–ù–ì–û–í–û–ô –î–ï–Ø–¢–ï–õ–¨–ù–û–°–¢–ò
   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–∏—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
   ‚Ä¢ –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
   ‚Ä¢ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏

2. –ö–õ–Æ–ß–ï–í–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò
   ‚Ä¢ ROI –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –ø–æ –∫–∞–Ω–∞–ª–∞–º –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è
   ‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞

3. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
   ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞
   ‚Ä¢ –§–æ–∫—É—Å –Ω–∞ –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
   ‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞`,

                sales: `–û–¢–ß–Å–¢ –ü–û –ü–†–û–î–ê–ñ–ê–ú

1. –ê–ù–ê–õ–ò–ó –ü–†–û–î–ê–ñ
   ‚Ä¢ –û–±—â–∏–π –æ–±—ä—ë–º –ø—Ä–æ–¥–∞–∂ –∑–∞ –ø–µ—Ä–∏–æ–¥
   ‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏

2. –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨ –ö–û–ú–ê–ù–î–´
   ‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –ª–∏–¥–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–∏
   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫

3. –ü–õ–ê–ù–´ –ò –ü–†–û–ì–ù–û–ó–´
   ‚Ä¢ –¶–µ–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥
   ‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂
   ‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã`,

                financial: `–§–ò–ù–ê–ù–°–û–í–´–ô –û–¢–ß–Å–¢

1. –§–ò–ù–ê–ù–°–û–í–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò
   ‚Ä¢ –í—ã—Ä—É—á–∫–∞ –∏ –ø—Ä–∏–±—ã–ª—å
   ‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
   ‚Ä¢ –î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏

2. –ê–ù–ê–õ–ò–ó –†–ï–ù–¢–ê–ë–ï–õ–¨–ù–û–°–¢–ò
   ‚Ä¢ –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤
   ‚Ä¢ –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
   ‚Ä¢ –¢–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏

3. –§–ò–ù–ê–ù–°–û–í–û–ï –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï
   ‚Ä¢ –ë—é–¥–∂–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥
   ‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã
   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏`,

                analytics: `–ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –û–¢–ß–Å–¢

1. –°–ë–û–† –ò –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•
   ‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
   ‚Ä¢ –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –∞–Ω–∞–ª–∏–∑–∞
   ‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏

2. –í–´–Ø–í–õ–ï–ù–ù–´–ï –¢–†–ï–ù–î–´
   ‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏
   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
   ‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏

3. –í–´–í–û–î–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
   ‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   ‚Ä¢ –ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π
   ‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã`,

                general: `–û–ë–©–ò–ô –û–¢–ß–Å–¢

1. –í–í–ï–î–ï–ù–ò–ï
   ‚Ä¢ –¶–µ–ª—å –æ—Ç—á—ë—Ç–∞
   ‚Ä¢ –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è
   ‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã

2. –û–°–ù–û–í–ù–ê–Ø –ß–ê–°–¢–¨
   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏
   ‚Ä¢ –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è

3. –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï
   ‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã
   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   ‚Ä¢ –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏`
            }
        };

        const cleanReportType = reportType.replace(/-en$|-ar$/, '') as keyof typeof contentMap.ru;
        return contentMap[language]?.[cleanReportType] || contentMap[language]?.general || contentMap.ru.general;
    }

    // –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    private detectReportType(text: string): string {
        const lower = text.toLowerCase();
        if (lower.includes('–º–∞—Ä–∫–µ—Ç–∏–Ω–≥') || lower.includes('marketing')) return 'marketing';
        if (lower.includes('–ø—Ä–æ–¥–∞–∂') || lower.includes('sales')) return 'sales';
        if (lower.includes('—Ñ–∏–Ω–∞–Ω—Å') || lower.includes('financial')) return 'financial';
        if (lower.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') || lower.includes('analytics')) return 'analytics';
        return 'general';
    }

    private generateContent(reportType: string, language: SupportedLanguage): string {
        const content = {
            ru: {
                marketing: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º –∫–∞–º–ø–∞–Ω–∏–π –∏ ROI',
                sales: '–û—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —Å –¥–∏–Ω–∞–º–∏–∫–æ–π –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏',
                financial: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á—ë—Ç —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                analytics: '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç —Å —Ç—Ä–µ–Ω–¥–∞–º–∏ –∏ –∏–Ω—Å–∞–π—Ç–∞–º–∏',
                general: '–û–±—â–∏–π –æ—Ç—á—ë—Ç —Å –∫–ª—é—á–µ–≤—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏'
            },
            en: {
                marketing: 'Marketing report with campaign analysis and ROI',
                sales: 'Sales report with dynamics and forecasts',
                financial: 'Financial report with performance metrics',
                analytics: 'Analytics report with trends and insights',
                general: 'General report with key indicators'
            },
            ar: {
                marketing: 'ÿ™ŸÇÿ±Ÿäÿ± ÿ™ÿ≥ŸàŸäŸÇŸä ŸÖÿπ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ≠ŸÖŸÑÿßÿ™ ŸàÿßŸÑÿπÿßÿ¶ÿØ ÿπŸÑŸâ ÿßŸÑÿßÿ≥ÿ™ÿ´ŸÖÿßÿ±',
                sales: 'ÿ™ŸÇÿ±Ÿäÿ± ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™ ŸÖÿπ ÿßŸÑÿØŸäŸÜÿßŸÖŸäŸÉŸäÿßÿ™ ŸàÿßŸÑÿ™ŸàŸÇÿπÿßÿ™',
                financial: 'ÿ™ŸÇÿ±Ÿäÿ± ŸÖÿßŸÑŸä ŸÖÿπ ŸÖŸÇÿßŸäŸäÿ≥ ÿßŸÑÿ£ÿØÿßÿ°',
                analytics: 'ÿ™ŸÇÿ±Ÿäÿ± ÿ™ÿ≠ŸÑŸäŸÑŸä ŸÖÿπ ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ŸàÿßŸÑÿ±ÿ§Ÿâ',
                general: 'ÿ™ŸÇÿ±Ÿäÿ± ÿπÿßŸÖ ŸÖÿπ ÿßŸÑŸÖÿ§ÿ¥ÿ±ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©'
            }
        };

        return content[language]?.[reportType as keyof typeof content.ru] ||
            content.ru.general;
    }
}

export const claudeApiService = new ClaudeApiService();