// –ù–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: frontend/src/components/MobileMenu.tsx

import { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { type SupportedLanguage } from '../config/languages';

interface MobileMenuProps {
    language: SupportedLanguage;
    setLanguage: (lang: SupportedLanguage) => void;
    translations: any;
}

const MobileMenu = ({ language, setLanguage, translations }: MobileMenuProps) => {
    const [isOpen, setIsOpen] = useState(false);
    const location = useLocation();
    const t = translations[language];

    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body –∫–æ–≥–¥–∞ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ
    useEffect(() => {
        if (isOpen) {
            document.body.classList.add('mobile-menu-open');
        } else {
            document.body.classList.remove('mobile-menu-open');
        }

        // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        return () => {
            document.body.classList.remove('mobile-menu-open');
        };
    }, [isOpen]);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ—É—Ç–∞
    useEffect(() => {
        setIsOpen(false);
    }, [location.pathname]);

    const toggleMenu = () => setIsOpen(!isOpen);

    const handleLinkClick = () => {
        setIsOpen(false);
    };

    return (
        <>
            {/* –ö–Ω–æ–ø–∫–∞ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é */}
            <button
                className="mobile-menu-toggle"
                onClick={toggleMenu}
                aria-label="Toggle menu"
            >
                <span className={`burger-line ${isOpen ? 'open' : ''}`}></span>
                <span className={`burger-line ${isOpen ? 'open' : ''}`}></span>
                <span className={`burger-line ${isOpen ? 'open' : ''}`}></span>
            </button>

            {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
            <div className={`mobile-menu ${isOpen ? 'open' : ''}`}>
                <div className="mobile-menu-content">
                    {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
                    <nav className="mobile-nav">
                        <Link
                            to="/"
                            className={`mobile-nav-link ${location.pathname === '/' ? 'active' : ''}`}
                            onClick={handleLinkClick}
                        >
                            üè† {t.home}
                        </Link>
                        <Link
                            to="/conversation"
                            className={`mobile-nav-link ${location.pathname === '/conversation' ? 'active' : ''}`}
                            onClick={handleLinkClick}
                        >
                            üí¨ {t.chat}
                        </Link>
                        <Link
                            to="/preview"
                            className={`mobile-nav-link ${location.pathname === '/preview' ? 'active' : ''}`}
                            onClick={handleLinkClick}
                        >
                            üëÅÔ∏è {t.preview}
                        </Link>
                    </nav>

                    {/* –í—ã–±–æ—Ä —è–∑—ã–∫–∞ */}
                    <div className="mobile-language-selector">
                        <h3>Language / –Ø–∑—ã–∫ / ÿßŸÑŸÑÿ∫ÿ©</h3>
                        <div className="mobile-lang-buttons">
                            <button
                                className={`mobile-lang-btn ${language === 'en' ? 'active' : ''}`}
                                onClick={() => {
                                    setLanguage('en');
                                    handleLinkClick();
                                }}
                            >
                                üá¨üáß English
                            </button>
                            <button
                                className={`mobile-lang-btn ${language === 'ru' ? 'active' : ''}`}
                                onClick={() => {
                                    setLanguage('ru');
                                    handleLinkClick();
                                }}
                            >
                                üá∑üá∫ –†—É—Å—Å–∫–∏–π
                            </button>
                            <button
                                className={`mobile-lang-btn ${language === 'ar' ? 'active' : ''}`}
                                onClick={() => {
                                    setLanguage('ar');
                                    handleLinkClick();
                                }}
                            >
                                üá∏üá¶ ÿßŸÑÿπÿ±ÿ®Ÿäÿ©
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            {/* –û–≤–µ—Ä–ª–µ–π */}
            {isOpen && (
                <div
                    className="mobile-menu-overlay"
                    onClick={toggleMenu}
                    aria-hidden="true"
                />
            )}
        </>
    );
};

export default MobileMenu;