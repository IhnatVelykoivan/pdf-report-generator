import { useEffect, useState } from 'react';
import { useConversation } from '../context/ConversationContext';
import { useNavigate } from 'react-router-dom';

const PDFPreviewPage = () => {
    const { state } = useConversation();
    const navigate = useNavigate();
    const [pdfUrl, setPdfUrl] = useState<string | null>(null);

    useEffect(() => {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π PDF blob –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        if (state.pdfBlob) {
            const url = URL.createObjectURL(state.pdfBlob);
            setPdfUrl(url);
            return () => URL.revokeObjectURL(url);
        }
    }, [state.pdfBlob]);

    const handleDownload = () => {
        if (state.pdfBlob) {
            const url = URL.createObjectURL(state.pdfBlob);
            const link = document.createElement('a');
            link.href = url;
            link.download = `report-${new Date().toISOString().slice(0, 10)}.pdf`;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            URL.revokeObjectURL(url);
        }
    };

    const handleCreateNew = () => {
        navigate('/conversation');
    };

    // –ï—Å–ª–∏ –Ω–µ—Ç PDF –∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö DSL
    if (!state.pdfBlob && !state.generatedDSL && !state.messages.length) {
        return (
            <div className="preview-container">
                <div className="preview-empty">
                    <div className="empty-state">
                        <div className="empty-icon">üìÑ</div>
                        <h2>–ù–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤</h2>
                        <p>–ù–∞—á–Ω–∏—Ç–µ —Å —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ –≤ —á–∞—Ç–µ —Å –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–æ–º</p>
                        <button className="create-report-btn" onClick={handleCreateNew}>
                            üí¨ –°–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç
                        </button>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="preview-container">
            <div className="preview-header">
                <div className="preview-title">
                    <h1>üìÑ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä PDF</h1>
                    <p>–í–∞—à –æ—Ç—á—ë—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è</p>
                </div>

                <div className="preview-actions">
                    <button
                        className="action-btn secondary"
                        onClick={handleCreateNew}
                    >
                        ‚ú® –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π
                    </button>
                    <button
                        className="action-btn primary"
                        onClick={handleDownload}
                        disabled={!state.pdfBlob}
                    >
                        üíæ –°–∫–∞—á–∞—Ç—å PDF
                    </button>
                </div>
            </div>

            <div className="preview-content">
                {state.isLoading && (
                    <div className="preview-loading">
                        <div className="loading-spinner"></div>
                        <p>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF...</p>
                    </div>
                )}

                {state.error && (
                    <div className="preview-error">
                        <div className="error-icon">‚ùå</div>
                        <h3>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF</h3>
                        <p>{state.error}</p>
                        <button className="retry-btn" onClick={handleCreateNew}>
                            üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                        </button>
                    </div>
                )}

                {state.pdfBlob && pdfUrl && (
                    <div className="pdf-viewer">
                        <div className="pdf-frame">
                            <iframe
                                src={pdfUrl}
                                width="100%"
                                height="800px"
                                title="PDF Preview"
                                style={{ border: 'none' }}
                            />
                        </div>

                        <div className="pdf-info">
                            <div className="info-item">
                                <span className="info-label">üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:</span>
                                <span className="info-value">
                  {(state.pdfBlob.size / 1024).toFixed(1)} KB
                </span>
                            </div>
                            <div className="info-item">
                                <span className="info-label">üìÖ –°–æ–∑–¥–∞–Ω:</span>
                                <span className="info-value">
                  {new Date().toLocaleString('ru-RU')}
                </span>
                            </div>
                            <div className="info-item">
                                <span className="info-label">üîß –¢–∏–ø:</span>
                                <span className="info-value">PDF Document</span>
                            </div>
                        </div>
                    </div>
                )}

                {!state.pdfBlob && state.messages.length > 0 && (
                    <div className="preview-placeholder">
                        <div className="placeholder-content">
                            <div className="placeholder-icon">‚è≥</div>
                            <h3>PDF –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω</h3>
                            <p>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —á–∞—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å PDF" –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞</p>
                            <button className="back-to-chat-btn" onClick={handleCreateNew}>
                                üí¨ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —á–∞—Ç
                            </button>
                        </div>
                    </div>
                )}
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ DSL —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ */}
            {state.generatedDSL && process.env.NODE_ENV === 'development' && (
                <div className="debug-info">
                    <details>
                        <summary>üîß DSL Structure (Debug)</summary>
                        <pre>{JSON.stringify(state.generatedDSL, null, 2)}</pre>
                    </details>
                </div>
            )}
        </div>
    );
};

export default PDFPreviewPage;